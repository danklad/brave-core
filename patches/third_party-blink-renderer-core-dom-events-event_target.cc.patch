diff --git a/third_party/blink/renderer/core/dom/events/event_target.cc b/third_party/blink/renderer/core/dom/events/event_target.cc
index 77197717821e5a815b399a80586d0f3d2d0cd8f5..cd4ef53dcb5c3ae319d072adf3f87537129b4c79 100644
--- a/third_party/blink/renderer/core/dom/events/event_target.cc
+++ b/third_party/blink/renderer/core/dom/events/event_target.cc
@@ -496,6 +496,8 @@ bool EventTarget::AddEventListenerInternal(
   bool added = EnsureEventTargetData().event_listener_map.Add(
       event_type, listener, options, &registered_listener);
   if (added) {
+    probe::RegisterPageGraphEventListenerAdd(this, event_type,
+                                             &registered_listener);
     if (options->hasSignal()) {
       // Instead of passing the entire |options| here, which could create a
       // circular reference due to |options| holding a Member<AbortSignal>, just
@@ -626,6 +628,8 @@ bool EventTarget::RemoveEventListenerInternal(
                                     &index_of_removed_listener,
                                     &registered_listener))
     return false;
+  probe::RegisterPageGraphEventListenerRemove(this, event_type,
+                                              &registered_listener);
 
   // Notify firing events planning to invoke the listener at 'index' that
   // they have one less listener to invoke.
@@ -684,6 +688,13 @@ bool EventTarget::SetAttributeEventListener(const AtomicString& event_type,
       listener->async_task_context()->Schedule(GetExecutionContext(),
                                                event_type);
     }
+    if (CoreProbeSink::HasAgentsGlobal(CoreProbeSink::kPageGraphAgent)) {
+      probe::RegisterPageGraphEventListenerRemove(this, event_type,
+                                                  registered_listener);
+      registered_listener->SetId(RegisteredEventListener::GenerateId());
+      probe::RegisterPageGraphEventListenerAdd(this, event_type,
+                                               registered_listener);
+    }
     registered_listener->SetCallback(listener);
     return true;
   }
