import * as React from 'react'

import * as S from './style'

const readingModeOptions = [
  {
    title: 'Normal'
  },
  {
    title: 'Enhanced'
  }
]

const fontStyleOptions = [
  {
    title: 'Sans',
    svgIcon: '<svg width="50" height="20" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M18.529 3h2.312l5.507 14.736h-2.203l-1.123-3.216h-6.696l-1.123 3.216H13L18.529 3Zm-1.564 9.736h5.418l-2.709-7.643-2.71 7.643ZM34.784 10.996c.029-.926-.155-1.638-.551-2.137-.396-.5-1.035-.749-1.916-.749-.661 0-1.204.154-1.63.463-.412.293-.676.705-.793 1.233l-1.784-.528a3.592 3.592 0 0 1 1.564-1.939c.763-.47 1.637-.705 2.62-.705 1.513 0 2.607.353 3.283 1.058.69.704 1.042 1.828 1.057 3.37l.022 2.555c.015.925.051 1.718.11 2.379.073.646.162 1.226.264 1.74h-1.696l-.44-1.498a3.48 3.48 0 0 1-1.388 1.3c-.587.308-1.365.462-2.335.462-.514 0-.998-.073-1.453-.22a3.732 3.732 0 0 1-1.212-.595 3.312 3.312 0 0 1-.815-.991 3.058 3.058 0 0 1-.286-1.344c0-.646.176-1.19.528-1.63.353-.44.845-.8 1.476-1.079.646-.294 1.425-.521 2.335-.683.91-.176 1.924-.33 3.04-.462Zm-5.33 3.81c0 .514.183.933.55 1.256.382.308.903.462 1.564.462.426 0 .837-.051 1.233-.154a3.004 3.004 0 0 0 1.08-.55c.323-.265.58-.61.77-1.036.191-.44.287-.984.287-1.63v-.683a34.33 34.33 0 0 0-2.269.309 9.18 9.18 0 0 0-1.74.418c-.47.176-.837.397-1.101.661-.25.25-.375.565-.375.947Z" fill="currentColor"/></svg>'
  },
  {
    title: 'Serif',
    svgIcon: '<svg width="50" height="20" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M27.98 17.744h-6.056v-.728c.533-.034.974-.102 1.322-.204.355-.103.533-.23.533-.38a1.517 1.517 0 0 0-.082-.46l-1.21-3.259h-5.091c-.192.478-.349.895-.472 1.25-.116.355-.222.683-.317.984-.09.293-.15.533-.185.717a2.59 2.59 0 0 0-.051.45c0 .274.215.486.645.636.43.15.916.24 1.455.266v.728H13v-.728c.178-.013.4-.05.666-.112.266-.069.485-.157.656-.267.273-.184.485-.375.635-.573.15-.205.297-.485.44-.84.731-1.824 1.537-3.874 2.419-6.148.88-2.275 1.666-4.3 2.356-6.076h.82l4.846 12.541c.103.266.219.482.348.645.13.164.311.325.544.482.157.096.361.178.614.246.253.061.465.096.636.102v.728ZM22.119 11.8l-2.203-5.635-2.162 5.635h4.365ZM37.805 17.56a11.94 11.94 0 0 1-.85.276c-.24.075-.512.113-.82.113-.532 0-.96-.123-1.28-.37-.315-.252-.516-.617-.605-1.095h-.062a4.97 4.97 0 0 1-1.434 1.127c-.505.26-1.117.389-1.834.389-.758 0-1.383-.232-1.875-.697-.485-.464-.727-1.072-.727-1.824 0-.389.054-.737.164-1.045.109-.307.273-.584.491-.83.171-.204.396-.385.677-.542.28-.164.543-.294.789-.39.307-.116.928-.331 1.864-.645.943-.315 1.578-.56 1.906-.738v-1.014c0-.09-.02-.26-.062-.513a2.062 2.062 0 0 0-.235-.717 1.97 1.97 0 0 0-.584-.656c-.246-.19-.598-.287-1.056-.287a2.35 2.35 0 0 0-.88.164c-.267.103-.455.212-.564.328 0 .137.03.338.092.605.068.266.102.512.102.737 0 .24-.109.458-.327.656-.212.198-.51.297-.892.297-.341 0-.594-.12-.758-.358a1.49 1.49 0 0 1-.236-.82c0-.314.11-.615.328-.902.226-.286.516-.543.871-.768.308-.191.68-.352 1.117-.482a4.281 4.281 0 0 1 1.28-.204c.575 0 1.073.04 1.497.122.43.076.82.243 1.168.503.348.252.611.597.789 1.034.184.43.276.987.276 1.67 0 .977-.01 1.845-.03 2.603-.021.751-.031 1.574-.031 2.47 0 .266.044.477.133.634.096.158.239.29.43.4.103.061.263.096.482.102.225.007.454.01.686.01v.656Zm-3.575-5.41c-.581.17-1.09.338-1.527.502a6.183 6.183 0 0 0-1.22.614 2.75 2.75 0 0 0-.809.83c-.198.315-.297.69-.297 1.127 0 .567.147.984.44 1.25.301.267.68.4 1.138.4.485 0 .912-.116 1.28-.348.37-.24.68-.52.933-.84l.062-3.535Z" fill="currentColor"/></svg>'
  },
  {
    title: 'Mono',
    svgIcon: '<svg width="50" height="20" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M15.078 11.348h5.067L17.48 4.784l-2.403 6.564Zm.632-6.564h-1.808c-.504 0-.86-.066-1.066-.199-.198-.14-.297-.371-.297-.693 0-.339.087-.57.26-.694.182-.132.67-.198 1.462-.198h3.53c.454 0 .76.062.917.186.165.115.314.334.446.656l4.843 12.102h.21c.446 0 .752.062.917.186.165.123.248.347.248.669 0 .338-.079.573-.236.706-.157.123-.45.185-.88.185h-3.368c-.628 0-1.033-.062-1.214-.186-.174-.132-.26-.367-.26-.706 0-.313.095-.532.285-.656.198-.132.565-.198 1.102-.198h1.152l-1.202-2.948H14.46l-1.065 2.948h1.201c.545 0 .917.066 1.115.198.198.124.297.343.297.657 0 .338-.09.573-.272.706-.173.123-.562.185-1.164.185h-3.258c-.529 0-.88-.062-1.053-.186-.173-.132-.26-.367-.26-.706 0-.321.087-.544.26-.668.174-.124.508-.186 1.003-.186h.236l4.211-11.16ZM35.615 12.216a8.343 8.343 0 0 0-1.325-.322 7.258 7.258 0 0 0-1.264-.112c-1.271 0-2.275.215-3.01.644-.734.43-1.102 1.008-1.102 1.734 0 .562.227 1.024.681 1.387.463.364 1.05.546 1.76.546a5.48 5.48 0 0 0 2.91-.818c.9-.553 1.35-1.127 1.35-1.722v-1.338Zm.1 3.901a7.437 7.437 0 0 1-2.218 1.4 6.457 6.457 0 0 1-2.452.483c-1.23 0-2.226-.343-2.986-1.028-.751-.686-1.127-1.577-1.127-2.676 0-1.304.5-2.316 1.499-3.034 1.008-.719 2.42-1.078 4.236-1.078.48 0 .962.033 1.45.1.487.057.986.152 1.498.284v-.087c0-.95-.227-1.651-.681-2.105-.454-.454-1.16-.682-2.118-.682-.644 0-1.363.174-2.155.52-.793.348-1.318.52-1.574.52a.739.739 0 0 1-.594-.284c-.157-.198-.235-.45-.235-.756 0-.487.454-.9 1.362-1.238.917-.339 2.085-.508 3.506-.508 1.453 0 2.551.372 3.294 1.115.743.735 1.115 1.825 1.115 3.27v5.61h.607c.586 0 .979.063 1.177.187.198.123.297.347.297.669 0 .297-.083.52-.248.668-.165.149-.413.223-.743.223H36.68a.797.797 0 0 1-.57-.21c-.148-.14-.247-.343-.297-.607l-.099-.756Z" fill="currentColor"/></svg>'
  },
  {
    title: 'Dyslexic',
    svgIcon: '<svg width="50" height="20" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M14.705 17.717H12L17.814 3h1.878l5.794 14.717h-2.847l-.565-2.402h-6.622l-.747 2.402Zm1.333-4.744h5.43l-2.725-8.156-2.705 8.156ZM37.77 17.717h-1.817v-1.574C35.125 17.354 33.933 18 32.137 18c-2.24 0-3.695-1.373-3.695-3.493 0-2.483 1.676-3.755 4.967-3.755h2.544v-.181c0-1.676-1.01-2.685-3.13-2.827a7.404 7.404 0 0 0-3.573.909V7.179c1.332-.505 2.584-.767 3.755-.767 3.21 0 4.765 1.635 4.765 5.007v6.298Zm-2.827-5.632h-1.635c-2.645 0-3.331.565-3.351 1.918.201 1.13 1.15 1.231 2.463 1.231 1.817 0 2.523-.383 2.523-2.745v-.404Z" fill="currentColor"/></svg>'
  }
]

const contentStyleOptions = [
  {
    title: 'Text with images',
    svgIcon: '<svg width="48" height="24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M14.163 11.217a.8.8 0 0 1 .617.203l3.97 3.592a.8.8 0 1 1-1.073 1.187l-3.316-3-2.972 4.022a.8.8 0 0 1-1.194.104l-1.602-1.521-1.748 2.536a.8.8 0 1 1-1.318-.909l2.28-3.306A.8.8 0 0 1 9.017 14l1.624 1.543 2.958-4.004a.8.8 0 0 1 .564-.32Z" fill="currentColor"/><path fill-rule="evenodd" clip-rule="evenodd" d="M7.611 10.22a2.611 2.611 0 1 0 0-5.223 2.611 2.611 0 0 0 0 5.222Zm1.111-2.612a1.111 1.111 0 1 1-2.222 0 1.111 1.111 0 0 1 2.222 0Z" fill="currentColor"/><path fill-rule="evenodd" clip-rule="evenodd" d="M6 2a4 4 0 0 0-4 4v12a4 4 0 0 0 4 4h12a4 4 0 0 0 4-4V6a4 4 0 0 0-4-4H6Zm12 1.6H6A2.4 2.4 0 0 0 3.6 6v12A2.4 2.4 0 0 0 6 20.4h12a2.4 2.4 0 0 0 2.4-2.4V6A2.4 2.4 0 0 0 18 3.6ZM44.25 6.5h-16.5a.75.75 0 0 1 0-1.5h16.5a.75.75 0 0 1 0 1.5Zm-16.5 3h10.5a.75.75 0 0 1 0 1.5h-10.5a.75.75 0 0 1 0-1.5Zm0 4.5h16.5a.75.75 0 0 1 0 1.5h-16.5a.75.75 0 0 1 0-1.5Zm0 4.5h10.5a.75.75 0 0 1 0 1.5h-10.5a.75.75 0 0 1 0-1.5Z" fill="currentColor"/></svg>'
  },
  {
    title: 'Text only',
    svgIcon: '<svg width="24" height="24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M20.25 6.5H3.75a.75.75 0 0 1 0-1.5h16.5a.75.75 0 0 1 0 1.5Zm-16.5 3h10.5a.75.75 0 0 1 0 1.5H3.75a.75.75 0 0 1 0-1.5Zm0 4.5h16.5a.75.75 0 0 1 0 1.5H3.75a.75.75 0 0 1 0-1.5Zm0 4.5h10.5a.75.75 0 0 1 0 1.5H3.75a.75.75 0 0 1 0-1.5Z" fill="currentColor"/></svg>'
  }
]

type OptionType = {
  isSelected: boolean
  children: JSX.Element
  onClick?: Function
  ariaLabel?: string
}

type ListBoxProps = {
  children: JSX.Element | JSX.Element[]
}

function ListBox (props: ListBoxProps) {
  return (
    <S.Box role="listbox" aria-orientation="horizontal">
      {props.children}
    </S.Box>
  )
}

function Option (props: OptionType) {
  const handleClick = () => {
    props.onClick?.()
  }

  return (
    <button
      role="option"
      className={props.isSelected ? 'is-active' : ''}
      aria-selected={props.isSelected}
      aria-label={props?.ariaLabel}
      onClick={handleClick}
    >
      {props.children}
    </button>
  )
}

export function ReadingModeList () {
  const [activeOption] = React.useState('normal')

  return (
    <ListBox>
      {readingModeOptions.map(entry => {
        return (
          <Option
            isSelected={activeOption === entry.title.toLocaleLowerCase()}
          >
            <div>
              {entry.title}
            </div>
          </Option>
        )
      })}
    </ListBox>
  )
}

export function FontStyleList () {
  const [activeOption] = React.useState('sans')

  return (
    <ListBox>
      {fontStyleOptions.map(entry => {
        return (
          <Option
            isSelected={activeOption === entry.title.toLocaleLowerCase()}
          >
            <div className="sm">
              <div dangerouslySetInnerHTML={{ __html: entry.svgIcon }} />
              {entry.title}
            </div>
          </Option>
        )
      })}
    </ListBox>
  )
}

export function ContentList () {
  const [activeOption] = React.useState('text with images')

  return (
    <ListBox>
      {contentStyleOptions.map(entry => {
        return (
          <Option
            isSelected={activeOption === entry.title.toLocaleLowerCase()}
            ariaLabel={entry.title}
          >
            <div dangerouslySetInnerHTML={{ __html: entry.svgIcon }} />
          </Option>
        )
      })}
    </ListBox>
  )
}
